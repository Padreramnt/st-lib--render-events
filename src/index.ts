import * as events from '@st-lib/events'
import { linking } from '@st-lib/render'

//#region events
function define<A extends any[]>(createEventListener: (...args: A) => (element: EventTarget) => () => void) {
	return (...args: A) => {
		linking(createEventListener(...args))
	}
}

export const onValueChange = define(events.createValueChangeEventListener)
export const onSvgUnload = define(events.createSvgUnloadEventListener)
export const onSvgZoom = define(events.createSvgZoomEventListener)
export const onAbort = define(events.createAbortEventListener)
export const onAfterPrint = define(events.createAfterPrintEventListener)
export const onAnimationCancel = define(events.createAnimationCancelEventListener)
export const onAnimationEnd = define(events.createAnimationEndEventListener)
export const onAnimationIteration = define(events.createAnimationIterationEventListener)
export const onAnimationStart = define(events.createAnimationStartEventListener)
export const onAuxClick = define(events.createAuxClickEventListener)
export const onBeforePrint = define(events.createBeforePrintEventListener)
export const onBeforeUnload = define(events.createBeforeUnloadEventListener)
export const onBlur = define(events.createBlurEventListener)
export const onBounce = define(events.createBounceEventListener)
export const onCancel = define(events.createCancelEventListener)
export const onCanPlay = define(events.createCanPlayEventListener)
export const onCanPlayThrough = define(events.createCanPlayThroughEventListener)
export const onChange = define(events.createChangeEventListener)
export const onClick = define(events.createClickEventListener)
export const onClose = define(events.createCloseEventListener)
export const onContextMenu = define(events.createContextMenuEventListener)
export const onCopy = define(events.createCopyEventListener)
export const onCueChange = define(events.createCueChangeEventListener)
export const onCut = define(events.createCutEventListener)
export const onDblClick = define(events.createDblClickEventListener)
export const onDrag = define(events.createDragEventListener)
export const onDragEnd = define(events.createDragEndEventListener)
export const onDragEnter = define(events.createDragEnterEventListener)
export const onDragExit = define(events.createDragExitEventListener)
export const onDragLeave = define(events.createDragLeaveEventListener)
export const onDragover = define(events.createDragoverEventListener)
export const onDragStart = define(events.createDragStartEventListener)
export const onDrop = define(events.createDropEventListener)
export const onDurationChange = define(events.createDurationChangeEventListener)
export const onEmptied = define(events.createEmptiedEventListener)
export const onEncrypted = define(events.createEncryptedEventListener)
export const onEnded = define(events.createEndedEventListener)
export const onError = define(events.createErrorEventListener)
export const onFinish = define(events.createFinishEventListener)
export const onFocus = define(events.createFocusEventListener)
export const onFocusIn = define(events.createFocusInEventListener)
export const onFocusOut = define(events.createFocusOutEventListener)
export const onFullscreenChange = define(events.createFullscreenChangeEventListener)
export const onFullscreenError = define(events.createFullscreenErrorEventListener)
export const onGotPointerCapture = define(events.createGotPointerCaptureEventListener)
export const onHashChange = define(events.createHashChangeEventListener)
export const onInput = define(events.createInputEventListener)
export const onInvalid = define(events.createInvalidEventListener)
export const onKeyDown = define(events.createKeyDownEventListener)
export const onKeyPress = define(events.createKeyPressEventListener)
export const onKeyUp = define(events.createKeyUpEventListener)
export const onLanguageChange = define(events.createLanguageChangeEventListener)
export const onLoad = define(events.createLoadEventListener)
export const onLoadedData = define(events.createLoadedDataEventListener)
export const onLoadedMetadata = define(events.createLoadedMetadataEventListener)
export const onLoadStart = define(events.createLoadStartEventListener)
export const onLostPointerCapture = define(events.createLostPointerCaptureEventListener)
export const onMessage = define(events.createMessageEventListener)
export const onMessageError = define(events.createMessageErrorEventListener)
export const onMouseDown = define(events.createMouseDownEventListener)
export const onMouseEnter = define(events.createMouseEnterEventListener)
export const onMouseLeave = define(events.createMouseLeaveEventListener)
export const onMouseMove = define(events.createMouseMoveEventListener)
export const onMouseOut = define(events.createMouseOutEventListener)
export const onMouseOver = define(events.createMouseOverEventListener)
export const onMouseUp = define(events.createMouseUpEventListener)
export const onOffline = define(events.createOfflineEventListener)
export const onOnline = define(events.createOnlineEventListener)
export const onOrientationChange = define(events.createOrientationChangeEventListener)
export const onPageHide = define(events.createPageHideEventListener)
export const onPageShow = define(events.createPageShowEventListener)
export const onPaste = define(events.createPasteEventListener)
export const onPause = define(events.createPauseEventListener)
export const onPlay = define(events.createPlayEventListener)
export const onPlaying = define(events.createPlayingEventListener)
export const onPointerCancel = define(events.createPointerCancelEventListener)
export const onPointerDown = define(events.createPointerDownEventListener)
export const onPointerEnter = define(events.createPointerEnterEventListener)
export const onPointerLeave = define(events.createPointerLeaveEventListener)
export const onPointerMove = define(events.createPointerMoveEventListener)
export const onPointerOut = define(events.createPointerOutEventListener)
export const onPointerover = define(events.createPointeroverEventListener)
export const onPointerUp = define(events.createPointerUpEventListener)
export const onPopState = define(events.createPopStateEventListener)
export const onProgress = define(events.createProgressEventListener)
export const onRateChange = define(events.createRateChangeEventListener)
export const onRejectionHandled = define(events.createRejectionHandledEventListener)
export const onReset = define(events.createResetEventListener)
export const onResize = define(events.createResizeEventListener)
export const onScroll = define(events.createScrollEventListener)
export const onSecurityPolicyViolation = define(events.createSecurityPolicyViolationEventListener)
export const onSeeked = define(events.createSeekedEventListener)
export const onSeeking = define(events.createSeekingEventListener)
export const onSelect = define(events.createSelectEventListener)
export const onSelectionChange = define(events.createSelectionChangeEventListener)
export const onSelectStart = define(events.createSelectStartEventListener)
export const onStalled = define(events.createStalledEventListener)
export const onStart = define(events.createStartEventListener)
export const onStorage = define(events.createStorageEventListener)
export const onSubmit = define(events.createSubmitEventListener)
export const onSuspend = define(events.createSuspendEventListener)
export const onTimeupdate = define(events.createTimeupdateEventListener)
export const onToggle = define(events.createToggleEventListener)
export const onTouchCancel = define(events.createTouchCancelEventListener)
export const onTouchEnd = define(events.createTouchEndEventListener)
export const onTouchMove = define(events.createTouchMoveEventListener)
export const onTouchStart = define(events.createTouchStartEventListener)
export const onTransitionCancel = define(events.createTransitionCancelEventListener)
export const onTransitionEnd = define(events.createTransitionEndEventListener)
export const onTransitionRun = define(events.createTransitionRunEventListener)
export const onTransitionStart = define(events.createTransitionStartEventListener)
export const onUnhandledRejection = define(events.createUnhandledRejectionEventListener)
export const onUnload = define(events.createUnloadEventListener)
export const onVolumeChange = define(events.createVolumeChangeEventListener)
export const onWaiting = define(events.createWaitingEventListener)
export const onWaitingForKey = define(events.createWaitingForKeyEventListener)
export const onWheel = define(events.createWheelEventListener)
//#endregion

//#region document events
function defineDocumentEvent<E, O>(createEventListener: (listener: (event: E) => any, options?: O) => (target: EventTarget) => () => void) {
	return function <R extends Element>(listener: (event: E, ref: R) => any, options?: O) {
		linking<R>(ref => (createEventListener(function (this: any, event) {
			return listener.call(this, event, ref)
		}, options)(document)))
	}
}

export const onDocumentValueChange = defineDocumentEvent(events.createValueChangeEventListener)
export const onDocumentSvgUnload = defineDocumentEvent(events.createSvgUnloadEventListener)
export const onDocumentSvgZoom = defineDocumentEvent(events.createSvgZoomEventListener)
export const onDocumentAbort = defineDocumentEvent(events.createAbortEventListener)
export const onDocumentAfterPrint = defineDocumentEvent(events.createAfterPrintEventListener)
export const onDocumentAnimationCancel = defineDocumentEvent(events.createAnimationCancelEventListener)
export const onDocumentAnimationEnd = defineDocumentEvent(events.createAnimationEndEventListener)
export const onDocumentAnimationIteration = defineDocumentEvent(events.createAnimationIterationEventListener)
export const onDocumentAnimationStart = defineDocumentEvent(events.createAnimationStartEventListener)
export const onDocumentAuxClick = defineDocumentEvent(events.createAuxClickEventListener)
export const onDocumentBeforePrint = defineDocumentEvent(events.createBeforePrintEventListener)
export const onDocumentBeforeUnload = defineDocumentEvent(events.createBeforeUnloadEventListener)
export const onDocumentBlur = defineDocumentEvent(events.createBlurEventListener)
export const onDocumentBounce = defineDocumentEvent(events.createBounceEventListener)
export const onDocumentCancel = defineDocumentEvent(events.createCancelEventListener)
export const onDocumentCanPlay = defineDocumentEvent(events.createCanPlayEventListener)
export const onDocumentCanPlayThrough = defineDocumentEvent(events.createCanPlayThroughEventListener)
export const onDocumentChange = defineDocumentEvent(events.createChangeEventListener)
export const onDocumentClick = defineDocumentEvent(events.createClickEventListener)
export const onDocumentClose = defineDocumentEvent(events.createCloseEventListener)
export const onDocumentContextMenu = defineDocumentEvent(events.createContextMenuEventListener)
export const onDocumentCopy = defineDocumentEvent(events.createCopyEventListener)
export const onDocumentCueChange = defineDocumentEvent(events.createCueChangeEventListener)
export const onDocumentCut = defineDocumentEvent(events.createCutEventListener)
export const onDocumentDblClick = defineDocumentEvent(events.createDblClickEventListener)
export const onDocumentDrag = defineDocumentEvent(events.createDragEventListener)
export const onDocumentDragEnd = defineDocumentEvent(events.createDragEndEventListener)
export const onDocumentDragEnter = defineDocumentEvent(events.createDragEnterEventListener)
export const onDocumentDragExit = defineDocumentEvent(events.createDragExitEventListener)
export const onDocumentDragLeave = defineDocumentEvent(events.createDragLeaveEventListener)
export const onDocumentDragover = defineDocumentEvent(events.createDragoverEventListener)
export const onDocumentDragStart = defineDocumentEvent(events.createDragStartEventListener)
export const onDocumentDrop = defineDocumentEvent(events.createDropEventListener)
export const onDocumentDurationChange = defineDocumentEvent(events.createDurationChangeEventListener)
export const onDocumentEmptied = defineDocumentEvent(events.createEmptiedEventListener)
export const onDocumentEncrypted = defineDocumentEvent(events.createEncryptedEventListener)
export const onDocumentEnded = defineDocumentEvent(events.createEndedEventListener)
export const onDocumentError = defineDocumentEvent(events.createErrorEventListener)
export const onDocumentFinish = defineDocumentEvent(events.createFinishEventListener)
export const onDocumentFocus = defineDocumentEvent(events.createFocusEventListener)
export const onDocumentFocusIn = defineDocumentEvent(events.createFocusInEventListener)
export const onDocumentFocusOut = defineDocumentEvent(events.createFocusOutEventListener)
export const onDocumentFullscreenChange = defineDocumentEvent(events.createFullscreenChangeEventListener)
export const onDocumentFullscreenError = defineDocumentEvent(events.createFullscreenErrorEventListener)
export const onDocumentGotPointerCapture = defineDocumentEvent(events.createGotPointerCaptureEventListener)
export const onDocumentHashChange = defineDocumentEvent(events.createHashChangeEventListener)
export const onDocumentInput = defineDocumentEvent(events.createInputEventListener)
export const onDocumentInvalid = defineDocumentEvent(events.createInvalidEventListener)
export const onDocumentKeyDown = defineDocumentEvent(events.createKeyDownEventListener)
export const onDocumentKeyPress = defineDocumentEvent(events.createKeyPressEventListener)
export const onDocumentKeyUp = defineDocumentEvent(events.createKeyUpEventListener)
export const onDocumentLanguageChange = defineDocumentEvent(events.createLanguageChangeEventListener)
export const onDocumentLoad = defineDocumentEvent(events.createLoadEventListener)
export const onDocumentLoadedData = defineDocumentEvent(events.createLoadedDataEventListener)
export const onDocumentLoadedMetadata = defineDocumentEvent(events.createLoadedMetadataEventListener)
export const onDocumentLoadStart = defineDocumentEvent(events.createLoadStartEventListener)
export const onDocumentLostPointerCapture = defineDocumentEvent(events.createLostPointerCaptureEventListener)
export const onDocumentMessage = defineDocumentEvent(events.createMessageEventListener)
export const onDocumentMessageError = defineDocumentEvent(events.createMessageErrorEventListener)
export const onDocumentMouseDown = defineDocumentEvent(events.createMouseDownEventListener)
export const onDocumentMouseEnter = defineDocumentEvent(events.createMouseEnterEventListener)
export const onDocumentMouseLeave = defineDocumentEvent(events.createMouseLeaveEventListener)
export const onDocumentMouseMove = defineDocumentEvent(events.createMouseMoveEventListener)
export const onDocumentMouseOut = defineDocumentEvent(events.createMouseOutEventListener)
export const onDocumentMouseOver = defineDocumentEvent(events.createMouseOverEventListener)
export const onDocumentMouseUp = defineDocumentEvent(events.createMouseUpEventListener)
export const onDocumentOffline = defineDocumentEvent(events.createOfflineEventListener)
export const onDocumentOnline = defineDocumentEvent(events.createOnlineEventListener)
export const onDocumentOrientationChange = defineDocumentEvent(events.createOrientationChangeEventListener)
export const onDocumentPageHide = defineDocumentEvent(events.createPageHideEventListener)
export const onDocumentPageShow = defineDocumentEvent(events.createPageShowEventListener)
export const onDocumentPaste = defineDocumentEvent(events.createPasteEventListener)
export const onDocumentPause = defineDocumentEvent(events.createPauseEventListener)
export const onDocumentPlay = defineDocumentEvent(events.createPlayEventListener)
export const onDocumentPlaying = defineDocumentEvent(events.createPlayingEventListener)
export const onDocumentPointerCancel = defineDocumentEvent(events.createPointerCancelEventListener)
export const onDocumentPointerDown = defineDocumentEvent(events.createPointerDownEventListener)
export const onDocumentPointerEnter = defineDocumentEvent(events.createPointerEnterEventListener)
export const onDocumentPointerLeave = defineDocumentEvent(events.createPointerLeaveEventListener)
export const onDocumentPointerMove = defineDocumentEvent(events.createPointerMoveEventListener)
export const onDocumentPointerOut = defineDocumentEvent(events.createPointerOutEventListener)
export const onDocumentPointerover = defineDocumentEvent(events.createPointeroverEventListener)
export const onDocumentPointerUp = defineDocumentEvent(events.createPointerUpEventListener)
export const onDocumentPopState = defineDocumentEvent(events.createPopStateEventListener)
export const onDocumentProgress = defineDocumentEvent(events.createProgressEventListener)
export const onDocumentRateChange = defineDocumentEvent(events.createRateChangeEventListener)
export const onDocumentRejectionHandled = defineDocumentEvent(events.createRejectionHandledEventListener)
export const onDocumentReset = defineDocumentEvent(events.createResetEventListener)
export const onDocumentResize = defineDocumentEvent(events.createResizeEventListener)
export const onDocumentScroll = defineDocumentEvent(events.createScrollEventListener)
export const onDocumentSecurityPolicyViolation = defineDocumentEvent(events.createSecurityPolicyViolationEventListener)
export const onDocumentSeeked = defineDocumentEvent(events.createSeekedEventListener)
export const onDocumentSeeking = defineDocumentEvent(events.createSeekingEventListener)
export const onDocumentSelect = defineDocumentEvent(events.createSelectEventListener)
export const onDocumentSelectionChange = defineDocumentEvent(events.createSelectionChangeEventListener)
export const onDocumentSelectStart = defineDocumentEvent(events.createSelectStartEventListener)
export const onDocumentStalled = defineDocumentEvent(events.createStalledEventListener)
export const onDocumentStart = defineDocumentEvent(events.createStartEventListener)
export const onDocumentStorage = defineDocumentEvent(events.createStorageEventListener)
export const onDocumentSubmit = defineDocumentEvent(events.createSubmitEventListener)
export const onDocumentSuspend = defineDocumentEvent(events.createSuspendEventListener)
export const onDocumentTimeupdate = defineDocumentEvent(events.createTimeupdateEventListener)
export const onDocumentToggle = defineDocumentEvent(events.createToggleEventListener)
export const onDocumentTouchCancel = defineDocumentEvent(events.createTouchCancelEventListener)
export const onDocumentTouchEnd = defineDocumentEvent(events.createTouchEndEventListener)
export const onDocumentTouchMove = defineDocumentEvent(events.createTouchMoveEventListener)
export const onDocumentTouchStart = defineDocumentEvent(events.createTouchStartEventListener)
export const onDocumentTransitionCancel = defineDocumentEvent(events.createTransitionCancelEventListener)
export const onDocumentTransitionEnd = defineDocumentEvent(events.createTransitionEndEventListener)
export const onDocumentTransitionRun = defineDocumentEvent(events.createTransitionRunEventListener)
export const onDocumentTransitionStart = defineDocumentEvent(events.createTransitionStartEventListener)
export const onDocumentUnhandledRejection = defineDocumentEvent(events.createUnhandledRejectionEventListener)
export const onDocumentUnload = defineDocumentEvent(events.createUnloadEventListener)
export const onDocumentVolumeChange = defineDocumentEvent(events.createVolumeChangeEventListener)
export const onDocumentWaiting = defineDocumentEvent(events.createWaitingEventListener)
export const onDocumentWaitingForKey = defineDocumentEvent(events.createWaitingForKeyEventListener)
export const onDocumentWheel = defineDocumentEvent(events.createWheelEventListener)
//#endregion

//#region window events
function defineWindowEvent<E, O>(createEventListener: (listener: (event: E) => any, options?: O) => (target: EventTarget) => () => void) {
	return function <R extends Element>(listener: (event: E, ref: R) => any, options?: O) {
		linking<R>(ref => (createEventListener(function (this: any, event) {
			return listener.call(this, event, ref)
		}, options)(window)))
	}
}

export const onWindowValueChange = defineWindowEvent(events.createValueChangeEventListener)
export const onWindowSvgUnload = defineWindowEvent(events.createSvgUnloadEventListener)
export const onWindowSvgZoom = defineWindowEvent(events.createSvgZoomEventListener)
export const onWindowAbort = defineWindowEvent(events.createAbortEventListener)
export const onWindowAfterPrint = defineWindowEvent(events.createAfterPrintEventListener)
export const onWindowAnimationCancel = defineWindowEvent(events.createAnimationCancelEventListener)
export const onWindowAnimationEnd = defineWindowEvent(events.createAnimationEndEventListener)
export const onWindowAnimationIteration = defineWindowEvent(events.createAnimationIterationEventListener)
export const onWindowAnimationStart = defineWindowEvent(events.createAnimationStartEventListener)
export const onWindowAuxClick = defineWindowEvent(events.createAuxClickEventListener)
export const onWindowBeforePrint = defineWindowEvent(events.createBeforePrintEventListener)
export const onWindowBeforeUnload = defineWindowEvent(events.createBeforeUnloadEventListener)
export const onWindowBlur = defineWindowEvent(events.createBlurEventListener)
export const onWindowBounce = defineWindowEvent(events.createBounceEventListener)
export const onWindowCancel = defineWindowEvent(events.createCancelEventListener)
export const onWindowCanPlay = defineWindowEvent(events.createCanPlayEventListener)
export const onWindowCanPlayThrough = defineWindowEvent(events.createCanPlayThroughEventListener)
export const onWindowChange = defineWindowEvent(events.createChangeEventListener)
export const onWindowClick = defineWindowEvent(events.createClickEventListener)
export const onWindowClose = defineWindowEvent(events.createCloseEventListener)
export const onWindowContextMenu = defineWindowEvent(events.createContextMenuEventListener)
export const onWindowCopy = defineWindowEvent(events.createCopyEventListener)
export const onWindowCueChange = defineWindowEvent(events.createCueChangeEventListener)
export const onWindowCut = defineWindowEvent(events.createCutEventListener)
export const onWindowDblClick = defineWindowEvent(events.createDblClickEventListener)
export const onWindowDrag = defineWindowEvent(events.createDragEventListener)
export const onWindowDragEnd = defineWindowEvent(events.createDragEndEventListener)
export const onWindowDragEnter = defineWindowEvent(events.createDragEnterEventListener)
export const onWindowDragExit = defineWindowEvent(events.createDragExitEventListener)
export const onWindowDragLeave = defineWindowEvent(events.createDragLeaveEventListener)
export const onWindowDragover = defineWindowEvent(events.createDragoverEventListener)
export const onWindowDragStart = defineWindowEvent(events.createDragStartEventListener)
export const onWindowDrop = defineWindowEvent(events.createDropEventListener)
export const onWindowDurationChange = defineWindowEvent(events.createDurationChangeEventListener)
export const onWindowEmptied = defineWindowEvent(events.createEmptiedEventListener)
export const onWindowEncrypted = defineWindowEvent(events.createEncryptedEventListener)
export const onWindowEnded = defineWindowEvent(events.createEndedEventListener)
export const onWindowError = defineWindowEvent(events.createErrorEventListener)
export const onWindowFinish = defineWindowEvent(events.createFinishEventListener)
export const onWindowFocus = defineWindowEvent(events.createFocusEventListener)
export const onWindowFocusIn = defineWindowEvent(events.createFocusInEventListener)
export const onWindowFocusOut = defineWindowEvent(events.createFocusOutEventListener)
export const onWindowFullscreenChange = defineWindowEvent(events.createFullscreenChangeEventListener)
export const onWindowFullscreenError = defineWindowEvent(events.createFullscreenErrorEventListener)
export const onWindowGotPointerCapture = defineWindowEvent(events.createGotPointerCaptureEventListener)
export const onWindowHashChange = defineWindowEvent(events.createHashChangeEventListener)
export const onWindowInput = defineWindowEvent(events.createInputEventListener)
export const onWindowInvalid = defineWindowEvent(events.createInvalidEventListener)
export const onWindowKeyDown = defineWindowEvent(events.createKeyDownEventListener)
export const onWindowKeyPress = defineWindowEvent(events.createKeyPressEventListener)
export const onWindowKeyUp = defineWindowEvent(events.createKeyUpEventListener)
export const onWindowLanguageChange = defineWindowEvent(events.createLanguageChangeEventListener)
export const onWindowLoad = defineWindowEvent(events.createLoadEventListener)
export const onWindowLoadedData = defineWindowEvent(events.createLoadedDataEventListener)
export const onWindowLoadedMetadata = defineWindowEvent(events.createLoadedMetadataEventListener)
export const onWindowLoadStart = defineWindowEvent(events.createLoadStartEventListener)
export const onWindowLostPointerCapture = defineWindowEvent(events.createLostPointerCaptureEventListener)
export const onWindowMessage = defineWindowEvent(events.createMessageEventListener)
export const onWindowMessageError = defineWindowEvent(events.createMessageErrorEventListener)
export const onWindowMouseDown = defineWindowEvent(events.createMouseDownEventListener)
export const onWindowMouseEnter = defineWindowEvent(events.createMouseEnterEventListener)
export const onWindowMouseLeave = defineWindowEvent(events.createMouseLeaveEventListener)
export const onWindowMouseMove = defineWindowEvent(events.createMouseMoveEventListener)
export const onWindowMouseOut = defineWindowEvent(events.createMouseOutEventListener)
export const onWindowMouseOver = defineWindowEvent(events.createMouseOverEventListener)
export const onWindowMouseUp = defineWindowEvent(events.createMouseUpEventListener)
export const onWindowOffline = defineWindowEvent(events.createOfflineEventListener)
export const onWindowOnline = defineWindowEvent(events.createOnlineEventListener)
export const onWindowOrientationChange = defineWindowEvent(events.createOrientationChangeEventListener)
export const onWindowPageHide = defineWindowEvent(events.createPageHideEventListener)
export const onWindowPageShow = defineWindowEvent(events.createPageShowEventListener)
export const onWindowPaste = defineWindowEvent(events.createPasteEventListener)
export const onWindowPause = defineWindowEvent(events.createPauseEventListener)
export const onWindowPlay = defineWindowEvent(events.createPlayEventListener)
export const onWindowPlaying = defineWindowEvent(events.createPlayingEventListener)
export const onWindowPointerCancel = defineWindowEvent(events.createPointerCancelEventListener)
export const onWindowPointerDown = defineWindowEvent(events.createPointerDownEventListener)
export const onWindowPointerEnter = defineWindowEvent(events.createPointerEnterEventListener)
export const onWindowPointerLeave = defineWindowEvent(events.createPointerLeaveEventListener)
export const onWindowPointerMove = defineWindowEvent(events.createPointerMoveEventListener)
export const onWindowPointerOut = defineWindowEvent(events.createPointerOutEventListener)
export const onWindowPointerover = defineWindowEvent(events.createPointeroverEventListener)
export const onWindowPointerUp = defineWindowEvent(events.createPointerUpEventListener)
export const onWindowPopState = defineWindowEvent(events.createPopStateEventListener)
export const onWindowProgress = defineWindowEvent(events.createProgressEventListener)
export const onWindowRateChange = defineWindowEvent(events.createRateChangeEventListener)
export const onWindowRejectionHandled = defineWindowEvent(events.createRejectionHandledEventListener)
export const onWindowReset = defineWindowEvent(events.createResetEventListener)
export const onWindowResize = defineWindowEvent(events.createResizeEventListener)
export const onWindowScroll = defineWindowEvent(events.createScrollEventListener)
export const onWindowSecurityPolicyViolation = defineWindowEvent(events.createSecurityPolicyViolationEventListener)
export const onWindowSeeked = defineWindowEvent(events.createSeekedEventListener)
export const onWindowSeeking = defineWindowEvent(events.createSeekingEventListener)
export const onWindowSelect = defineWindowEvent(events.createSelectEventListener)
export const onWindowSelectionChange = defineWindowEvent(events.createSelectionChangeEventListener)
export const onWindowSelectStart = defineWindowEvent(events.createSelectStartEventListener)
export const onWindowStalled = defineWindowEvent(events.createStalledEventListener)
export const onWindowStart = defineWindowEvent(events.createStartEventListener)
export const onWindowStorage = defineWindowEvent(events.createStorageEventListener)
export const onWindowSubmit = defineWindowEvent(events.createSubmitEventListener)
export const onWindowSuspend = defineWindowEvent(events.createSuspendEventListener)
export const onWindowTimeupdate = defineWindowEvent(events.createTimeupdateEventListener)
export const onWindowToggle = defineWindowEvent(events.createToggleEventListener)
export const onWindowTouchCancel = defineWindowEvent(events.createTouchCancelEventListener)
export const onWindowTouchEnd = defineWindowEvent(events.createTouchEndEventListener)
export const onWindowTouchMove = defineWindowEvent(events.createTouchMoveEventListener)
export const onWindowTouchStart = defineWindowEvent(events.createTouchStartEventListener)
export const onWindowTransitionCancel = defineWindowEvent(events.createTransitionCancelEventListener)
export const onWindowTransitionEnd = defineWindowEvent(events.createTransitionEndEventListener)
export const onWindowTransitionRun = defineWindowEvent(events.createTransitionRunEventListener)
export const onWindowTransitionStart = defineWindowEvent(events.createTransitionStartEventListener)
export const onWindowUnhandledRejection = defineWindowEvent(events.createUnhandledRejectionEventListener)
export const onWindowUnload = defineWindowEvent(events.createUnloadEventListener)
export const onWindowVolumeChange = defineWindowEvent(events.createVolumeChangeEventListener)
export const onWindowWaiting = defineWindowEvent(events.createWaitingEventListener)
export const onWindowWaitingForKey = defineWindowEvent(events.createWaitingForKeyEventListener)
export const onWindowWheel = defineWindowEvent(events.createWheelEventListener)
//#endregion
